version: '3.7'

volumes:
  prometheus_data: { }
  grafana_data: { }

networks:
  front-tier:
  back-tier:

services:
  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: server-monitoring-prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    links:
#      - cadvisor:cadvisor
      - alertmanager:alertmanager
#    depends_on:
#      - cadvisor
    networks:
      - back-tier
    restart: unless-stopped


  node-exporter:
    image: prom/node-exporter:v1.2.2
    container_name: server-monitoring-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - '9100:9100'
    networks:
      - back-tier
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    container_name: server-monitoring-alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    ports:
#      - '8080:8080'
#    networks:
#      - back-tier
#    restart: unless-stopped
#    deploy:
#      mode: global

  grafana:
    image: grafana/grafana
    container_name: server-monitoring-grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: unless-stopped


  mailserver:
    image: docker.io/mailserver/docker-mailserver:latest
    container_name: server-monitoring-mailserver
    hostname: mail
    domainname: css-appli18.com
    env_file: mailserver/mailserver.env
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS)
      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      - ./docker-data/dms/mail-data/:/var/mail/
      - ./docker-data/dms/mail-state/:/var/mail-state/
      - ./docker-data/dms/mail-logs/:/var/log/mail/
      - ./docker-data/dms/config/:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
      - /etc/letsencrypt:/etc/letsencrypt
    restart: always
    stop_grace_period: 1m
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE

  letsencrypt:
    image: certbot/certbot:latest
    container_name: server-monitoring-letsencrypt
    command:
      - 'command: certonly --webroot -w /var/www/html -d www.examplecom -d examplecom --non-interactive --agree-tos -m example@example.com'
    restart: unless-stopped
    volumes:
      - ./docker-data/certbot/certs/:/etc/letsencrypt
      - ./docker-data/certbot/logs/:/var/log/letsencrypt
    ports:
      - '80:80'
